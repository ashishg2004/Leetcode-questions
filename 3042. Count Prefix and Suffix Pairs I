class Solution {
public:
    int countPrefixSuffixPairs(vector<string>& words) {
        int cnt = 0;
        for (int i = 0; i < words.size(); i++) {
            for (int j = 0; j < words.size(); j++) {
                if (i != j && i>j) {
                    if (isPrefixAndSuffix(words[i], words[j]) == true)
                        cnt++;
                }
            }
        }
        return cnt;
    }

    bool isPrefixAndSuffix(const string& str1, const string& str2) {
        int l1 = str1.size();
        int l2 = str2.size();
        if (l2 > l1) return false; // Early return if str2 is longer than str1

        int a = 0;
        int b = 0;

        // Check if str2 is a prefix of str1
        for (int i = 0; i < l2; i++) {
            if (str1[i] != str2[i]) {
                a = 1;
                break;
            }
        }

        // Check if str2 is a suffix of str1
        int x = 0;
        for (int i = l1 - l2; i < l1; i++) {
            if (str1[i] != str2[x]) {
                b = 1;
                break;
            }
            x++;
        }

        if (a == 0 && b == 0)
            return true;
        return false;
    }
};
